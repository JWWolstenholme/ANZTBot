// Created with Todo+ VSCode extension  
Todo: 
  Bugs:
    ✔ "https://osu.ppy.sh/mp/54169084 HD2 HR2" and "https://osu.ppy.sh/mp/54169903 NM5 DT2 0" cause key errors @started(19-08-19 03:37) @done(19-08-19 04:22) @lasted(45m9s)
      Caused by maps being aborted
    ✔ "https://osu.ppy.sh/mp/53996635 DT1 HD2" @done(19-08-19 04:29)
      Caused by maps being aborted
    ✘ "https://osu.ppy.sh/mp/53996626 HD1 NM2" @started(19-08-19 04:30) @cancelled(19-08-19 04:42) @wasted(12m9s)
      Caused by player dc, no changes made
    ✔ "https://osu.ppy.sh/community/matches/53994610 HR2 HD2" @started(19-08-19 04:43) @done(19-08-19 04:53) @lasted(10m33s)
      Caused by a bug in regex which where it only checked if an id was present for one type of possible url type
    ✔ Spreadsheet scraping does not work on ANZT7S' new spreadsheet format @done(20-01-25 01:31)
    ✔ The bot dies eventually after hours of running and requires restarting @done(20-01-31 23:19)
      I beleive this was caused by the below error or something to do with error handling that has been fixed
    ✔ The bot can not handle tracebacks greater than just under 2000 characters long @done(20-01-30 21:59)
    ✔ The bot sometimes fails to connect to the twitch api @done(20-01-31 23:19)
      This was caused by timeouts due to my bad internet so It just waits and tries again later now
    ✔ The bot doesn't show any picks for match results @done(20-02-08 05:38)
      This was due to teething issues regarding now having lobbies to test on. It was mostly caused by not converting strings from the api to ints
    ☐ The bot will show a tiebreaker map as if it was picked by the next player
  Improvements:
    ✔ Improve handling of empty cells in mappool picking spreadsheet @done(20-01-25 01:31)
      Fixed when spreadsheet scraping was updated for ANZT7S
    ✔ Get bot working on diony.live @started(19-08-19 04:57) @done(19-08-19 06:22) @lasted(1h25m37s)
      Server was stuck in a situation where it couldn't update it's package list. Switched to a new Ubuntu distro instead of Debain
    ✔ Get bot starting on boot on diony.live @done(19-09-01 00:46)
      See 'crontab -e'
    ☐ Check if stream is live using webhooks instead of REST calls
    ✘ Show more info in user popout when stream is live like thumbnail and game. @cancelled(20-01-27 17:44)
      Not possible due to limitations for bots
    ✔ Use a new design for result embeds @done(20-01-30 04:53)
    ✔ Use the spreadsheet to get results, instead of requiring referee input @done(20-01-30 04:53)
    ☐ Allow reporting of forfeited matches
      Maybe allow for reporting a reason
    ✔ Allow matches to be reported before the mp has closed @done(20-02-09 03:49)
    ☐ Allow for proper parsing of lobbies that continued past the match was over. For showmatches of other maps in the pool for exmaple
    Refactor:
      ✔ Use discord.ext.commands instead of crazy regex https://discordpy.readthedocs.io/en/latest/ext/commands/index.html @started(19-08-19 19:18) @done(19-09-04 22:23) @lasted(2w2d3h5m42s)
        Had to compromise and change result command to be invoked with !format
      ✔ Use on_message() and get !format working without having to include "!format" @done(20-01-30 04:53)
        See bashbot for how to do this
      ☐ Use cogs
        ☐ If cogs allow, add commands for adding and removing cogs from within discord
      ☐ Refactor the two large methods
      ✔ Improve error handling. Currently does not catch BadArgument errors for example @done(20-01-25 01:32)
        I was using the on_error event instead of the on_command_error
      ✘ Use .format instead of f-strings @cancelled(20-01-25 01:33)
        f-strings are superior
      ✔ Optimize imports @done(20-02-08 06:27)
      ✔ Allow referees to specify final score @done(19-09-04 22:24)
      ✔ Output match id when outputting match result @done(19-09-04 22:24)
  Features:
    ✔ !picked command showing all picked maps @done(20-01-25 01:34)
    ☐ !pick command which adds the pick to the sheet
    ✔ Show status as streaming when osuanzt channel is live @done(20-01-25 18:05)
      Could be done via webhook (which might require making a small web server for GET and POST request) or periodic REST calls.
      Implemented with periodeic REST calls
    ☐ !say command to make the bot say stuff. Could be funny or used for announcements
    ☐ Integrate some features from https://github.com/LeaPhant/flowabot and find someway to credit it
    Big stuff for future tourneys:
      ☐ Predictions and associated rankings
      ☐ Automatic reffing
        CeilingWaffle is working on something that might include this
